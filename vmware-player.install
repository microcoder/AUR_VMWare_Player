
patch_kernel_modules() {
    # INFO: https://github.com/mkubecek/vmware-host-modules/blob/player-15.5.0/INSTALL

    local pkgver=$(echo $1 | sed -e 's/-[0-9]$//')
    local kernel_branch=$(uname -r | sed -r 's/.[0-9]-[0-9]-.+$//')

    if [[ "${pkgver}" > 14.999 && "${pkgver}" < 16.0 ]] && [[ "${kernel_branch}" > 4.8 ]]; then
      echo "==> Patch VMWare kernel modules"

      local tmp_dir=$(mktemp -d -t 'vmware_host_modules.XXXXXXX')

      cd "${tmp_dir}"
      git clone https://github.com/mkubecek/vmware-host-modules.git
      cd "${tmp_dir}"/vmware-host-modules
      git checkout p${pkgver}-k${kernel_branch}  # git checkout "player-${pkgver}"

      tar -cf /lib/vmware/modules/source/vmmon.tar vmmon-only
      tar -cf /lib/vmware/modules/source/vmnet.tar vmnet-only

      rm -r "${tmp_dir}"
    fi
}

rebuild_kernel_modules(){
  echo '==> Rebuild all VMWare kernel modules'
  vmware-modconfig --console --install-all
}

pre_install() {
  return
}

post_install() {

  patch_kernel_modules $1
  rebuild_kernel_modules

  systemctl enable vmware-usbarbitrator.service
  systemctl start vmware-usbarbitrator.service
  systemctl restart vmware-networks-configuration.service # Creating net config in /etc/vmware
  systemctl enable vmware-networks.service
  systemctl start vmware-networks.service

}

pre_upgrade() {

  systemctl stop vmware-usbarbitrator.service
  systemctl stop vmware-networks.service

  echo '==> Backup /etc/vmware-installer/database'
  mv /etc/vmware-installer/database /etc/vmware-installer/database.bak

}

post_upgrade() {

  echo '==> Migration data from /etc/vmware-installer/database.bak to /etc/vmware-installer/database'

  sqlite3 << EOF
  attach '/etc/vmware-installer/database' as db_new;
  attach '/etc/vmware-installer/database.bak' as db_old;

  --Moving records from db_old.files to db_new.files
  INSERT OR REPLACE INTO db_new.files (id, path, mtime, type, component_id)
  SELECT *
    FROM db_old.files;

  --Moving records from db_old.setting to db_new.setting
  INSERT OR REPLACE INTO db_new.settings (key, value, component_name)
  SELECT *
    FROM db_old.settings as t
    WHERE t.component_name in ('vmware-player-app', 'vmware-player', 'vmware-vmx');

  -- Moving excepting setting from db_old to db_new
  INSERT INTO db_new.settings
  SELECT *
    FROM db_old.settings as t
    WHERE t.key in (SELECT key FROM db_old.settings
                    EXCEPT
                    SELECT key FROM db_new.settings);
EOF

  rm /etc/vmware-installer/database.bak

  patch_kernel_modules $1
  rebuild_kernel_modules

  systemctl daemon-reload

  systemctl start vmware-networks.service
  systemctl start vmware-usbarbitrator.service
}

pre_remove() {
  
  # Calling native VMWare uninstaller:
  vmware-installer -u vmware-player

  systemctl stop vmware-usbarbitrator.service
  systemctl disable vmware-usbarbitrator.service

  systemctl stop vmware-networks.service
  systemctl disable vmware-networks.service

  ############################################################################################################
  ###### This code needed as alternative uninstalling kernel modules instead native vmware uninstaller #######

  # vmci - High performance communication interface between host and guest
  # vmmon - Virtual Machine Monitor
  # vmnet - Networking driver

  echo 'Remove kernel modules: vmci, vmmon, vmnet'
  
  # Remove kernel modules
  for mod in vmci vmmon vmnet; do
    mod_filename=$(modinfo $mod | grep filename | sed 's/^filename: *//')
    modprobe -r $mod > /dev/null; # 2>&1
    if [ "$?" -eq "0" ]; then
      rm "$mod_filename"
      rmdir --ignore-fail-on-non-empty "$(dirname $mod_filename)" # Try remove empty dir
    fi
  done

  depmod # Rebuilding modules database (/lib/modules/$(uname -r)/modules*)
  ############################################################################################################
}

post_remove() {

  # TODO: Сделать удаление модулей для старых ядер в:
  # /lib/modules/4.20.15-1-MANJARO/misc/vmmon.ko
  # /lib/modules/4.20.15-1-MANJARO/misc/vmnet.ko

  rm -R /usr/lib/vmware-installer

  echo '==> To remove VMware settings, delete: /etc/vmware and /etc/vmware-installer directories'

}
